{"version":3,"sources":["components/SearchResult/SearchResult.js","components/PageButton/PageButton.js","containers/SearchPage/SearchPage.js","App.js","registerServiceWorker.js","index.js"],"names":["searchResult","props","react_default","a","createElement","className","title","author","date","href","publicationLink","PageButton","value","name","onClick","SearchPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputChangeHandler","event","setState","searchInput","target","searchHandler","axios","get","state","then","response","myStringArray","data","items","arrayLength","length","i","posts","concat","toConsumableArray","console","log","pageOneHandler","currentPage","pageTwoHandler","pageThreeHandler","pageFourHandler","showItems","React","Children","map","children","child","cloneElement","key","slice","post","SearchResult_SearchResult","volumeInfo","authors","publishedDate","canonicalVolumeLink","type","onChange","components_PageButton_PageButton","Component","App","containers_SearchPage_SearchPage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c88cd172.chunk.js","sourcesContent":["import React from 'react';\n\nimport './SearchResult.css';\n\nconst searchResult = (props) => (\n    <article className=\"SearchResult\">\n        <h1>{props.title}</h1>\n        <div className=\"Info\">\n            <div className=\"Author\">{props.author}</div>\n            <div className=\"Author\">{props.date}</div>\n            {/* <div className=\"Author\">{props.description}</div> */}\n        </div>\n        <a href={props.publicationLink}>Visit publication</a>\n    </article>\n);\n\nexport default searchResult;","import React from 'react'\r\n\r\nconst PageButton = (props) => {\r\n    return(\r\n        <button value={props.name} className=\"lilButton\" onClick={props.onClick} >{props.name} </button>\r\n    )\r\n}\r\n\r\nexport default PageButton","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport SearchResult from '../../components/SearchResult/SearchResult';\nimport PageButton from '../../components/PageButton/PageButton';\nimport './SearchPage.css';\n\nclass SearchPage extends Component {\n    constructor() {\n        super()\n    this.state = {\n        posts: [],\n        searchInput: '',\n        showItems: 4,\n        currentPage: 1\n    }\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({\n            searchInput: event.target.value\n        })\n    }\n\n    searchHandler = () => {\n\n\n        axios.get('https://www.googleapis.com/books/v1/volumes?q={' + this.state.searchInput  + '}')\n        // axios.get('https://www.googleapis.com/books/v1/volumes?q={search terms}')\n            .then(response => {\n                let myStringArray = response.data.items;\n                let arrayLength = myStringArray.length;\n                for (let i = 0; i < arrayLength; i++) {\n                // console.log(myStringArray[i]);\n                this.setState({\n                    posts: [...this.state.posts, myStringArray[i]]\n                });\n    }\n                \n                console.log(this.state.posts)\n            });\n    }\n\n    pageOneHandler = () => {\n        this.setState({\n            currentPage: 1\n        })\n    }\n\n    pageTwoHandler = () => {\n        this.setState({\n            currentPage: 2\n        })\n    }\n\n    pageThreeHandler = () => {\n        this.setState({\n            currentPage: 3\n        })\n    }\n\n    pageFourHandler = () => {\n        this.setState({\n            currentPage: 4\n        })\n    }\n\n    render () {\n\n        let posts = ''\n\n        \n        React.Children.map(this.props.children, (child,  i) => {\n            React.cloneElement(child, { key:  i }) })\n   \n\n        if (this.state.searchInput !== '') {\n\n            if (this.state.currentPage === 1) {\n                posts = this.state.posts.slice(this.state.showItems - this.state.showItems, this.state.showItems).map(post => {\n                    return <SearchResult \n                                title={post.volumeInfo.title}\n                                author={post.volumeInfo.authors}\n                                date={post.volumeInfo.publishedDate}\n                                // description={post.volumeInfo.description}\n                                publicationLink={post.volumeInfo.canonicalVolumeLink}\n                            />\n                })\n            }\n\n            if (this.state.currentPage === 2) {\n                posts = this.state.posts.slice((this.state.showItems - this.state.showItems) + this.state.showItems, this.state.showItems+ this.state.showItems).map(post => {\n                    return <SearchResult \n                                title={post.volumeInfo.title}\n                                author={post.volumeInfo.authors}\n                                date={post.volumeInfo.publishedDate}\n                                // description={post.volumeInfo.description}\n                                publicationLink={post.volumeInfo.canonicalVolumeLink}\n                            />\n                })\n            }\n\n            if (this.state.currentPage === 3) {\n                posts = this.state.posts.slice((this.state.showItems - this.state.showItems) + this.state.showItems * this.state.currentPage - 1, this.state.showItems+ this.state.showItems * this.state.currentPage - 1).map(post => {\n                    return <SearchResult \n                                title={post.volumeInfo.title}\n                                author={post.volumeInfo.authors}\n                                date={post.volumeInfo.publishedDate}\n                                // description={post.volumeInfo.description}\n                                publicationLink={post.volumeInfo.canonicalVolumeLink}\n                            />\n                })\n            }\n\n            if (this.state.currentPage === 4) {\n                posts = this.state.posts.slice((this.state.showItems - this.state.showItems) + this.state.showItems * this.state.currentPage - 1, this.state.showItems+ this.state.showItems * this.state.currentPage - 1).map(post => {\n                    return <SearchResult \n                                title={post.volumeInfo.title}\n                                author={post.volumeInfo.authors}\n                                date={post.volumeInfo.publishedDate}\n                                // description={post.volumeInfo.description}\n                                publicationLink={post.volumeInfo.canonicalVolumeLink}\n                            />\n                })\n            }\n            \n    }\n        return (\n            <div>\n                <div>\n                <section>\n                <div className=\"SearchPage\">\n                    <label>BookSearchEngine™</label>\n                    <input type=\"text\" value={this.state.searchInput} onChange={this.inputChangeHandler} />\n                    <button onClick={this.searchHandler}>Find now</button>\n                </div>\n                </section>\n\n                <section className=\"Posts\">\n                    {posts}\n                </section>\n                </div>\n                <div>\n                    <PageButton name=\"1\" onClick={this.pageOneHandler}/>\n                    <PageButton name=\"2\" onClick={this.pageTwoHandler}/>\n                    <PageButton name=\"3\" onClick={this.pageThreeHandler}/>\n                    <PageButton name=\"4\" onClick={this.pageFourHandler}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchPage;","import React, { Component } from 'react';\n\nimport SearchPage from './containers/SearchPage/SearchPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}